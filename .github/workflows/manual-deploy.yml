name: Manual Deploy to AWS S3

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: '배포 유형 선택'
        required: true
        default: 'full'
        type: choice
        options:
          - full
          - prebuilt

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      # 전체 빌드 & 배포 선택시에만 실행
      - name: Setup Node.js
        if: ${{ github.event.inputs.build_type == 'full' }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        if: ${{ github.event.inputs.build_type == 'full' }}
        run: npm ci
        
      - name: Build
        if: ${{ github.event.inputs.build_type == 'full' }}
        run: npm run build
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: Deploy HTML files to S3 (no cache)
        run: |
          aws s3 sync ./out s3://${{ secrets.AWS_S3_BUCKET }} --delete --exclude "*" --include "*.html" --cache-control "no-cache,max-age=0" --content-type "text/html; charset=utf-8"
          
      - name: Deploy static assets to S3 (with cache)
        run: |
          aws s3 sync ./out s3://${{ secrets.AWS_S3_BUCKET }} --delete --exclude "*.html" --cache-control "public,max-age=31536000"
          
      - name: Invalidate CloudFront (if using CDN)
        if: ${{ env.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          if [ ! -z "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
          fi 